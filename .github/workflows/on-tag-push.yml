# .github/workflows/ci-cd.yml
name: CI / CD

on:
  push:
    tags:
      - 'v*'

permissions:
  id-token: write
  contents: read
  packages: write

env:
  AWS_REGION: eu-west-2
  ECR_REGISTRY: 275578070934.dkr.ecr.eu-west-2.amazonaws.com
  ECR_REPOSITORY: craig-watt-website

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - run: npm install -g npm@11

      - run: npm ci

      - run: npx nx build nextjs-app --configuration=production

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: apps/nextjs-app/Dockerfile
          build-args: |
            MAILERSEND_API_KEY=${{ secrets.MAILERSEND_API_KEY }}
            CONTACT_EMAIL_TO=${{ secrets.CONTACT_EMAIL_TO }}
            CONTACT_EMAIL_FROM=${{ secrets.CONTACT_EMAIL_FROM }}
            NEXT_PUBLIC_RECAPTCHA_SITE_KEY=${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}
            RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}
          push: true
          tags: |
            ghcr.io/craigwatt/craig-watt-website:${{ github.ref_name }}
            ghcr.io/craigwatt/craig-watt-website:latest

  deploy-infra:
    name: Deploy Terraform
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: infra
        run: terraform init \
          -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
          -backend-config="key=${{ github.ref_name }}/terraform.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}" \
          -backend-config="dynamodb_table=${{ secrets.TF_STATE_LOCK_TABLE }}"

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve \
          -var="image_tag=${{ needs.build-and-push.outputs.image_tag }}"
